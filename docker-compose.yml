version: "3.9"

x-build-frontend: &x-build-frontend
  image: ariadne_frontend
  build:
    context: frontend/
    cache_from:
      - ariadne_frontend
  networks:
    - ariadne-net
  depends_on:
    - backend

x-build-backend: &x-build-backend
  image: ariadne_backend
  build:
    context: backend/
    dockerfile: Dockerfile

x-build-backend-test: &x-build-backend-test
  image: ariadne_backend-test
  build:
    context: backend/
    # See file header comment in Dockerfile.debug-and-test
    dockerfile: Dockerfile.debug-and-test

x-development-volumes-backend: &x-development-volumes-backend
  volumes:
    - ./backend:/app

x-development-volumes-frontend: &x-development-volumes-frontend
  volumes:
    - ./frontend:/app

services:
  frontend:
    <<: *x-build-frontend
    ports:
      - "3000:3000"
    # <<: *x-development-volumes-frontend

  frontend-test:
    <<: *x-build-frontend
    command: yarn test
    environment:
      # We need to override REACT_APP_API_URL in `.env.test` in order to test against
      # `backend` service.
      - REACT_APP_API_URL=http://backend:8080/v0/
    # <<: *x-development-volumes-frontend

  backend:
    <<: *x-build-backend
    build:
      context: backend/
    ports:
      - "8080:8080"
    networks:
      - ariadne-net
    # <<: *x-development-volumes-backend

  backend-debug:
    <<: *x-build-backend-test
    # Dockerfile.debug-and-test is primarily a test container.  We need to override
    # the `go test...` CMD, running delve instead.
    command: [ "./tools/dlv", "--listen=:2345", "--headless=true", "--api-version=2", "--accept-multiclient", "exec", "./ariadne" ]
    cap_add:
      - SYS_PTRACE
    ports:
      # Delve port
      - "2345:2345"
      # Application port
      - "8080:8080"
    networks:
      - ariadne-net
    security_opt:
      - apparmor:unconfined
    # <<: *x-development-volumes-backend

  backend-test:
    <<: *x-build-backend-test
    command: ["go","test","-cover","./..."]
    # <<: *x-development-volumes-backend

  backend-test-coverage:
    <<: *x-build-backend-test
    command:
      - /bin/sh
      - -c
      - |
        go test -coverprofile=coverage.out ./... &&
        go tool cover -func=coverage.out
        # go tool cover -html=coverage.out
    # <<: *x-development-volumes-backend

networks:
  ariadne-net:
    driver: bridge
